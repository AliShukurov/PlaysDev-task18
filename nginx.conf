#load_module /usr/lib/nginx/modules/ngx_http_image_filter_module.so;

events {}

http {

    upstream backend_redblue {
        server 127.0.0.1:8081;
        server 127.0.0.1:8082;
#        server blabla.net backup; включится только если два лягут
#        server 127.0.0.1:8083 weight=3; из 5 запросов, 3 уйдут сюда
#        server 127.0.0.1:3839 max_conns=10; может принимать только 10 запросов (когда сервак мелкий)
#        server 127.0.0.1:2832 max_fails=2 fail_timeout=10; при 2 неудачныз запросах засыпает на 10 сек
    }


    server {
        listen 8081;
        add_header X-Backend-Server "Server-Red";
#        server_name taskdocker.ddns.net;
        root /var/www/html;
        index red.html;

#        location / {
#            index red.html;
#        }

    }

    server {
        listen 8082;
        add_header X-Backend-Server "Server-Blue";
#        server_name taskdocker.ddns.net;
        root /var/www/html;
        index blue.html;

#        location / {
#            index blue.html;
#        }

    }

#    server {
#        listen 80;
#        server_name taskdocker.ddns.net;
#        root /var/www/html;
#        index index.html;
#        return 301 https://$host$request_uri;
#    }

    server {
        listen 80;
        server_name taskdocker.ddns.net;
        root /var/www/html;
        index index.html;
        include /etc/nginx/conf.d/*.conf;

#        ssl_certificate /etc/letsencrypt/fullchain.pem; # managed by Certbot
#        ssl_certificate_key /etc/letsencrypt/privkey.pem; # managed by Certbot

        location /secondpage {
            alias /var/www/html;
            index secondpage.html;
        }

        location /music {
            alias /var/www/html/music;
            add_header Content-Disposition 'attachment; filename="LP.mp3"';
            try_files /LP.mp3 =404;
#           index LP.mp3;
        }

        location /index.php {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /secondserver {
            proxy_pass https://career.habr.com;

        }



        location /redblue {
            proxy_pass http://backend_redblue/;
            set $redblue_color "red";
            if ($cookie_redblue_color = "red") {
                  set $redblue_color "blue";
            }
            add_header Set-Cookie "redblue_color=$redblue_color; path=/";
            proxy_set_header Host $host;
        }

        location ~ ^/image/(.*\.png)$ {
            alias /var/www/html/images/$1;
        }

        location ~ ^/image/(.*\.jpg)$ {
            alias /var/www/html/images/$1;
#            image_filter rotate 180;
        }


        location ~ ^/image1/(.*\.jpg)$ {
#            image_filter rotate 180;
            alias /var/www/html/images/$1;
        }

        location ~ ^/image2 {
            alias /var/www/html/images/im2.png;
        }


        location ~ ^/(.*\.(png|jpg))$ {
            rewrite ^/(.*\.jpg)$ /image1/$1 redirect;
            rewrite ^/(.*\.png)$ /image2/$1 redirect;
        }

#        location /cpu {
#            alias /var/www/html;
#            index cpu.html;
#        }

        location /error500 {
            return 500;
        }


        # Добавьте другие настройки SSL, если нужно

        # ... (дополнительные настройки сервера)
    }

}
